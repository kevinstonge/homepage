{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/ColorTools/accessories/colorConversion.js","pages/ColorTools/components/ColorPreview.js","pages/ColorTools/components/wheel.js","pages/ColorTools/components/ColorWheel.js","pages/ColorTools/components/HslSliders.js","pages/ColorTools/accessories/cookies.js","pages/ColorTools/components/Harmonic.js","pages/ColorTools/components/Shading.js","pages/ColorTools/components/ColorPalette.js","pages/ColorTools/accessories/copyToClipboard.js","pages/ColorTools/components/RgbSliders.js","pages/ColorTools/ColorTools.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","rgb2hsl","r","g","b","h","s","l","d","min","max","Math","abs","toFixed","rgb2hex","c","map","item","join","toUpperCase","hsl2rgb","x","m","round","hex2rgb","hex","concat","parseInt","substring","hex2hsl","apply","hsl2hex","hueReset","hue","ColorPreview","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","iChange","e","persist","input","target","value","newColor","colorTest","id","document","querySelector","innerText","updateBaseColor","iFocus","select","buffer","getData","type","colorData","color","state","baseColor","backgroundColor","cConvert","border","updateInputs","keys","forEach","copyColor","elementToCopy","replace","copyIconElement","hslElement","hslElementOriginalValue","hslArray","execCommand","setTimeout","hexInput","hslInput","rgbInput","match","tempColor","filter","Boolean","colorHelp","_this2","react_default","a","createElement","style","key","htmlFor","size","onChange","onFocus","onBlur","role","arei-label","aria-hidden","title","onClick","Component","cWheel","width","colorCanvas","colorCanvasUI","updateFunction","drawInnerBox","baseHue","arguments","undefined","baseColorHSL","row","topY","bottomY","rowPercent","boxGradient","ctx","createLinearGradient","leftX","rightX","addColorStop","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","drawOuterWheel","segments","theta0","theta1","rad0","PI","rad1","x1","wheelRadius","cos","y1","height","sin","x2","y2","gradient","arc","drawOutput","output","Number","updateSelectedColor","drawSelectors","selectors","wheelSelector","boxSelector","ctxUI","clearRect","selectorLineWidth","selectedColor","externalInput","baseColorHEX","calculateWheelSelectorPosition","calculateBoxSelectorPosition","getNearestPointInBox","y","getNearestPointOnWheel","atan","mouseData","touches","rect","getBoundingClientRect","targetTouches","pageX","left","pageY","top","offsetX","offsetY","xDist","yDist","dist","sqrt","pow","mouseDown","preventDefault","focus","selfInvoked","innerRadius","outerRadius","activeSelector","mouseMove","buttons","mouseUp","position","marginLeft","zIndex","getContext","outerWheelThickness","boxWidth","boxHeight","ceil","textX","textY","init","theta","ColorWheel","colorWheel","Fragment","tabIndex","outline","addEventListener","passive","HslSliders","cFocus","colorVar","substr","cChange","nativeEvent","data","slice","inputType","inputs","indexOf","setSliders","componentDidUpdate","className","name","setCookie","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","split","charAt","Harmonic","updateState","newState","setState","updateCookie","cookies","JSON","stringify","applyCookie","parse","settings","Palette Mode","Analogous","Complementary","Complementary split","Complementary with split","Tetradic rectangle","Tetradic square","Triadic","Saturation Steps","Luminosity Steps","f","checked","values","globalState","fill","j","saturation","k","luminosity","clipBoardString","copiedFormats","paletteState","paletteBoxClick","Shading","calculateColor","baseSaturation","baseLuminosity","lContrast","sContrast","paletteSize","maxSaturation","maxLuminosity","h0","s0","l0","updateSettings","shadow temperature","highlight temperature","luminosity contrast","saturation contrast","palette size","palette","sphereCSS","clipPath","background","reverse","display","flexWrap","cssColor","ColorPalette","changeMode","mode","changeCopiedFormat","copyString","ctrlKey","str","el","setAttribute","body","appendChild","selected","getSelection","rangeCount","getRangeAt","removeChild","removeAllRanges","addRange","copyToClipboard","Copied format","modes","hsl","rgb","borderBottom","React","updateComponentState","RgbSliders","baseColorRGB","onInput","ColorTools","textColor","togglePicker","picker","pickerCSS","ColorPreview_ColorPreview","ColorWheel_ColorWheel","HslSliders_HslSliders","RgbSliders_RgbSliders","ColorPalette_ColorPalette"],"mappings":"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","file":"static/js/3.4f322959.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export function rgb2hsl (r,g,b) {\r\n    r=r/255; g=g/255; b=b/255;\r\n    let h,s,l,d,min,max = null;\r\n    max=Math.max(r,g,b);\r\n    min=Math.min(r,g,b);\r\n    d=max-min;\r\n    l=(max+min);\r\n    if (max===r) { h = 60*(((g-b)/d)%6); }\r\n    if (max===g) { h = 60*(((b-r)/d)+2); }\r\n    if (max===b) { h = 60*(((r-g)/d)+4); }\r\n    if (d===0) { h=0; s=0; }\r\n    if (h<0) { h=h+360; }\r\n    if (d!==0) { s=d/(1-Math.abs(l-1)); }\r\n    h = h.toFixed(2);\r\n    s = (s*100).toFixed(2);\r\n    l = (l*50).toFixed(2);\r\n    return [h,s,l];\r\n}\r\nexport function rgb2hex (r, g, b) {\r\n    let c = [r,g,b];\r\n    c = \"#\" + c.map(\r\n        function(item){\r\n            return item.toString(16);\r\n        }).map(\r\n        function(item){\r\n            if(item.length===1){return \"0\" + item;}\r\n            else {return(item);}\r\n        }).join(\"\").toUpperCase();\r\n    return c;\r\n}\r\nexport function hsl2rgb (h,s,l) {\r\n    s=s/100;\r\n    l=l/100;\r\n    let c=(1-Math.abs((2*l)-1))*s;\r\n    let x=c*(1-Math.abs(((h/60)%2)-1));\r\n    let m=l-c/2;\r\n    let r,g,b;\r\n    if (h<60|h===360) {r=c;g=x;b=0;}\r\n    else if (h<120)\t{r=x;g=c;b=0}\r\n    else if (h<180)\t{r=0;g=c;b=x}\r\n    else if (h<240) {r=0;g=x;b=c}\r\n    else if (h<300) {r=x;g=0;b=c}\r\n    else if (h<360)\t{r=c;g=0;b=x}\r\n    r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);\r\n    return [r,g,b];\t\r\n}\r\nexport function hex2rgb (hex) {\r\n    hex = (hex[0]===\"#\") ? hex : `#${hex}`;\r\n    let r = parseInt(hex.substring(1,3),16);\r\n    let g = parseInt(hex.substring(3,5),16);\r\n    let b = parseInt(hex.substring(5,7),16);\r\n    return [r,g,b];\r\n}\r\nexport function hex2hsl (hex) {\r\n    return rgb2hsl(...hex2rgb(hex));\r\n}\r\nexport function hsl2hex(h,s,l) {\r\n\treturn rgb2hex(...hsl2rgb(h,s,l));\r\n}\r\nexport function hueReset(hue) {\r\n    while (hue < 0) {\r\n        hue = hue + 360;\r\n    }\r\n    while (hue >= 360) {\r\n        hue = hue - 360;\r\n    }\r\n    return hue;\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as cConvert from '../accessories/colorConversion';\r\nimport '../components/ColorPreview.css';\r\n\r\nexport default class ColorPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buffer=[];\r\n        this.colorData={\r\n            \"hexInput\":()=>cConvert.hsl2hex(...this.props.state.baseColor),\r\n            \"hslInput\":()=>this.props.state.baseColor.join(\", \"),\r\n            \"rgbInput\":()=>cConvert.hsl2rgb(...this.props.state.baseColor).join(\", \")\r\n        };\r\n        this.colorTest={\r\n            \"hexInput\":(input)=>{\r\n                return (input.match(/^#{0,1}[0-9a-f]{6}$/i)) ? cConvert.hex2hsl(input) : null;\r\n            },\r\n            \"hslInput\":(input)=>{\r\n                let tempColor = input.match(/(\\d*\\.{0,1}\\d*)/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\"; \r\n                if (tempColor.length===3 && tempColor[0]<360 && tempColor[1]<=100 && tempColor[2]<=100) {\r\n                    return [tempColor[0],tempColor[1],tempColor[2]];\r\n                }\r\n            },\r\n            \"rgbInput\":(input)=>{\r\n                let tempColor = input.match(/\\d{1,3}/g);\r\n                tempColor = (tempColor) ? tempColor.filter(Boolean) : \"\";\r\n                if (tempColor.length===3 && tempColor[0]<=255 && tempColor[1]<=255 && tempColor[2]<=255) {\r\n                    return cConvert.rgb2hsl(tempColor[0],tempColor[1],tempColor[2]);\r\n                }\r\n            }\r\n        }\r\n        this.colorHelp={\r\n            \"hexInput\":\"enter six-digit hexidecimal values with no spaces,\\n\\\"#\\\" prefix is optional\",\r\n            \"hslInput\":\"enter three values separated by spaces or commas,\\nfirst value is hue and must be less than 360,\\nsecond value is saturation and must be less than or equal to 100,\\nthird value is luminosity and must be less than or equal to 100.\\nDecimals values can be used\",\r\n            \"rgbInput\":\"enter three values separated by spaces or commas,\\neach value must be less than or equal to 255\"\r\n        }\r\n    } \r\n    iChange = (e) => {\r\n        e.persist();\r\n        let input = e.target.value;\r\n        let newColor = this.colorTest[e.target.id](input);\r\n        if (newColor) {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❔\";\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n        else {\r\n            document.querySelector(`#${e.target.id}Help`).innerText = \"❓\";\r\n        }\r\n\r\n    }\r\n    iFocus = (e) => {\r\n        e.target.select();\r\n        this.buffer = [e.target.id,e.target.value];\r\n    }\r\n\r\n    getData = (type) => { \r\n        if (typeof this.colorData[type] === \"function\") { return this.colorData[type]() }\r\n        if (type === \"style\") {\r\n            let color = (this.props.state.baseColor[2]>45)?\"black\":\"white\"\r\n            return ({\r\n                backgroundColor:cConvert.hsl2hex(...this.props.state.baseColor),\r\n                color:color,\r\n                border:`1px solid ${color}`\r\n            });\r\n        }\r\n    }\r\n    updateInputs = () => {\r\n        Object.keys(this.colorData).forEach(e=>{\r\n            if (this.buffer[0]!==e) {\r\n                document.querySelector(`#${e}`).value = this.getData(e);\r\n                document.querySelector(`#${e}Help`).innerText = \"❔\";\r\n            }\r\n        })\r\n    }\r\n    copyColor = (e) => {\r\n        let elementToCopy = `#${e.target.id.replace(\"Copy\",\"\")}`;\r\n        let copyIconElement = `#${e.target.id}`;\r\n        if (elementToCopy[2] === \"s\") {\r\n            let hslElement = document.querySelector(elementToCopy);\r\n            let hslElementOriginalValue = hslElement.value;\r\n            let hslArray = this.colorTest[\"hslInput\"](hslElement.value);\r\n            hslElement.value = `${hslArray[0]},${hslArray[1]}%,${hslArray[2]}%`;\r\n            hslElement.select();\r\n            document.execCommand(\"copy\");\r\n            hslElement.value = hslElementOriginalValue;\r\n        }\r\n        else {\r\n            document.querySelector(elementToCopy).select();\r\n            document.execCommand(\"copy\");\r\n        }\r\n        document.querySelector(copyIconElement).innerText = \"✔️\";\r\n        setTimeout(()=>{document.querySelector(copyIconElement).innerText = \"📋\"},500);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div id=\"colorOutput\" style={this.getData(\"style\")}>\r\n                {Object.keys(this.colorData).map(e=>\r\n                    <p key={e}>\r\n                    <label htmlFor={e}>{e.replace(\"Input\",\":\")} \r\n                    <input id={e} type=\"text\" size=\"16\" onChange={this.iChange} onFocus={this.iFocus} onBlur={()=>{this.buffer=[]}} style={this.getData(\"style\")} />\r\n                    <span role=\"img\" arei-label=\"help\" aria-hidden=\"true\" id={`${e}Help`} title={this.colorHelp[e]}>❔</span>\r\n                    <span role=\"img\" arei-label=\"copy\" aria-hidden=\"true\" id={`${e}Copy`} title=\"copy\" onClick={this.copyColor}>📋</span>\r\n                    </label>\r\n                    </p>\r\n                )}\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.updateInputs();\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateInputs();\r\n    }\r\n}","import * as cConvert from '../accessories/colorConversion';\r\nexport default class cWheel {\r\n    constructor(width,baseColor,colorCanvas,colorCanvasUI,updateFunction) {\r\n        this.baseColorHSL = baseColor;\r\n        this.h = baseColor[0];\r\n        this.s = baseColor[1];\r\n        this.l = baseColor[2];\r\n        this.baseColorHEX = cConvert.hsl2hex(baseColor);\r\n        this.updateSelectedColor = updateFunction;\r\n        this.colorCanvas = colorCanvas;\r\n        this.colorCanvasUI = colorCanvasUI;\r\n        this.width = width;\r\n        this.height = width; //must be a square\r\n        this.colorCanvas.width = this.width;\r\n        this.colorCanvas.height = this.height;\r\n        this.colorCanvasUI.width = this.width;\r\n        this.colorCanvasUI.height = this.height;\r\n        this.colorCanvasUI.style.position = 'relative';\r\n        this.colorCanvasUI.style.marginLeft = `-${this.width}px`;\r\n        this.colorCanvas.style.zIndex = '0';\r\n        this.colorCanvasUI.style.zIndex = '1';\r\n        this.ctx = this.colorCanvas.getContext(\"2d\");\r\n        this.ctxUI = this.colorCanvasUI.getContext(\"2d\");\r\n        this.outerWheelThickness = this.width/15;\r\n        this.ctx.lineWidth = this.outerWheelThickness;\r\n        this.wheelRadius = (this.width/2)-this.outerWheelThickness/2;\r\n        this.innerRadius = this.wheelRadius - this.outerWheelThickness/2;\r\n        this.outerRadius = this.wheelRadius + this.outerWheelThickness/2;\r\n        this.boxWidth = 2*(this.wheelRadius-(this.outerWheelThickness/2))/Math.sqrt(2)-2;\r\n        this.boxHeight = this.boxWidth;\r\n        this.leftX = (this.width/2)-(this.boxWidth/2);\r\n        this.topY = (this.height/2)-(this.boxHeight/2);\r\n        this.rightX = this.leftX+this.boxWidth;\r\n        this.bottomY = (this.height/2)+(this.boxHeight/2);\r\n        this.calculateWheelSelectorPosition(this.baseColorHSL);\r\n        this.calculateBoxSelectorPosition(this.baseColorHSL);\r\n        this.activeSelector = \"wheel\";\r\n        this.selectedColor = this.baseColorHSL; \r\n        this.selectorLineWidth = Math.ceil(this.outerWheelThickness/12);\r\n        this.textX = this.width/2;\r\n        this.textY = this.bottomY + this.outerWheelThickness*1.2;\r\n        this.selfInvoked = false;\r\n        this.init = (() => { \r\n            this.drawOuterWheel();this.drawInnerBox(); this.drawSelectors();\r\n        })();\r\n    };\r\n    calculateBoxSelectorPosition(color) {\r\n        let x = this.leftX + this.boxWidth * this.l/100;\r\n        let y = this.topY + this.boxHeight * this.s/100;\r\n        this.boxSelector = [x,y];\r\n    }\r\n    calculateWheelSelectorPosition(color) {\r\n        let r = this.wheelRadius;\r\n        let theta = color[0]*Math.PI/180;\r\n        let x = r*Math.cos(theta)+(this.width/2);\r\n        let y = -r*Math.sin(theta)+(this.height/2);\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    drawInnerBox = (baseHue=this.baseColorHSL[0]) => {\r\n        for (let row = this.topY; row <= this.bottomY; row+=3) { \r\n            let rowPercent = 100*(row-this.topY)/(this.bottomY-this.topY);\r\n            let boxGradient = this.ctx.createLinearGradient(this.leftX,row,this.rightX,row);\r\n            let steps = 2; \r\n            for (let i=0; i<=steps; i++) { \r\n                boxGradient.addColorStop(i/steps,`hsla(${baseHue},${rowPercent}%,${100*i/steps}%,1)`);\r\n            }\r\n            this.ctx.strokeStyle = boxGradient;\r\n            this.ctx.lineWidth = 4; //using 4 for width and 3 for the increment helps performance without sacrificing appearance\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.leftX,row);\r\n            this.ctx.lineTo(this.rightX,row);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOuterWheel = (segments=12) => { \r\n        for (let i=0; i<segments; i++) {\r\n            let theta0 = i*360/segments;\r\n            let theta1 = (i+1)*360/segments;\r\n            let rad0 = theta0*Math.PI/180 - .01; // - .01 hides the gaps\r\n            let rad1 = theta1*Math.PI/180;\r\n            let x1 = this.wheelRadius*Math.cos(rad0)+(this.width/2); \r\n            let y1 = this.height - (this.wheelRadius*Math.sin(rad0)+(this.height/2)); \r\n            let x2 = this.wheelRadius*Math.cos(rad1)+(this.width/2);\r\n            let y2 = this.height - (this.wheelRadius*Math.sin(rad1)+(this.height/2));\r\n            let gradient = this.ctx.createLinearGradient(x1,y1,x2,y2); \r\n            gradient.addColorStop(0,`hsla(${theta0},100%,50%,1)`);\r\n            gradient.addColorStop(1,`hsla(${theta1},100%,50%,1)`);\r\n            this.ctx.strokeStyle = gradient;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.width/2,this.height/2,this.wheelRadius,2*Math.PI-(rad0),2*Math.PI-(rad1),true);\r\n            this.ctx.stroke();\r\n            this.ctx.closePath();\r\n        }\r\n    }\r\n    drawOutput = (output) => {\r\n        output.forEach((e,i,a)=>a[i]=Number(a[i]).toFixed(2));\r\n        this.updateSelectedColor(output);\r\n    }\r\n    drawSelectors = () => {\r\n        let selectors = [[this.wheelSelector[0],this.wheelSelector[1]],[this.boxSelector[0],this.boxSelector[1]]];\r\n        this.ctxUI.clearRect(0,0,this.width,this.height);\r\n        selectors.forEach(e=> {\r\n            this.ctxUI.moveTo(e[0],e[1]);\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"#252525\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n            this.ctxUI.beginPath();\r\n            this.ctxUI.lineWidth = this.selectorLineWidth;\r\n            this.ctxUI.strokeStyle = \"white\";\r\n            this.ctxUI.arc(e[0],e[1],this.width/30-this.selectorLineWidth,0,2*Math.PI);\r\n            this.ctxUI.stroke();\r\n            this.ctxUI.closePath();\r\n        });\r\n        this.drawOutput(this.selectedColor);\r\n    }\r\n    externalInput = (color) => {\r\n        this.h = color[0];\r\n        this.s = color[1];\r\n        this.l = color[2];\r\n        this.baseColorHSL = color;\r\n        this.baseColorHEX = cConvert.hsl2hex(color);\r\n        this.selectedColor = color;\r\n        this.calculateWheelSelectorPosition(color);\r\n        this.calculateBoxSelectorPosition(color);\r\n        this.drawInnerBox(this.baseColorHSL[0]);\r\n        this.drawSelectors();\r\n    }\r\n    getNearestPointInBox = (x,y) => {\r\n        if (x<this.leftX) { this.x = this.leftX };\r\n        if (x>this.rightX) { this.x = this.rightX };\r\n        if (y<this.topY) { this.y = this.topY };\r\n        if (y>this.bottomY) { this.y = this.bottomY };\r\n        this.s = 100*(this.y-this.topY)/(this.bottomY-this.topY);\r\n        this.l = 100*(this.x-this.leftX)/(this.rightX-this.leftX);\r\n        this.boxSelector = [this.x,this.y];\r\n    }\r\n    getNearestPointOnWheel = (x,y,d) => {\r\n        this.h = (180/Math.PI)*Math.atan(y/x);\r\n        if (x < 0) { this.h = this.h + 180; }\r\n        if (y < 0) { this.h = this.h + 360; }\r\n        this.h = 360-this.h;\r\n        if (this.h<0) { this.h = 360+this.h }\r\n        if (this.h===360) { this.h = 0; }\r\n        x = (this.width/2) + this.wheelRadius*x/d;\r\n        y = (this.width/2) + this.wheelRadius*y/d;\r\n        this.wheelSelector = [x,y];\r\n    }\r\n    mouseData = (e) => {\r\n        if (e.touches) {\r\n            let rect = e.target.getBoundingClientRect();\r\n            this.x = e.targetTouches[0].pageX - rect.left;\r\n            this.y = e.targetTouches[0].pageY - rect.top;\r\n        }\r\n        else {\r\n            this.x = e.offsetX;\r\n            this.y = e.offsetY;\r\n        }\r\n        this.xDist = this.x - this.width/2;\r\n        this.yDist = this.y - this.height/2;\r\n        this.dist = Math.sqrt(this.xDist**2 + this.yDist**2);\r\n    }\r\n    mouseDown = (e) => {\r\n        e.preventDefault();\r\n        document.querySelector(\"#colorCanvasUI\").focus();\r\n        this.selfInvoked = true;\r\n        this.mouseData(e);\r\n        if (this.dist > this.innerRadius && this.dist < this.outerRadius) { \r\n            this.activeSelector = \"wheel\";\r\n            this.mouseMove(e);\r\n        }\r\n        else if (this.x>this.leftX && this.x<this.rightX && this.y>this.topY && this.y<this.bottomY) { \r\n            this.activeSelector = \"box\";\r\n            this.mouseMove(e);\r\n        }\r\n        else { this.activeSelector = null; }\r\n    }\r\n    mouseMove = (e) => {\r\n        if (e.buttons === 0 || this.activeSelector === \"null\") { return; }\r\n        this.mouseData(e);\r\n        if (this.activeSelector === \"wheel\") {\r\n            this.getNearestPointOnWheel(this.xDist,this.yDist,this.dist);\r\n            this.drawInnerBox(this.h);\r\n        }\r\n        if (this.activeSelector === \"box\") { \r\n            this.getNearestPointInBox(this.x,this.y);\r\n        }\r\n        this.selectedColor = [this.h,this.s,this.l];\r\n        this.drawSelectors();\r\n    }\r\n    mouseUp = () => {\r\n        this.updateSelectedColor(this.selectedColor);\r\n        this.activeSelector = null;\r\n        this.selfInvoked = false;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cWheel from './wheel';\r\n//todo: \"copy\"/\"OK\"/\"close\" buttons\r\n//todo: preview box in top left\r\nexport default class ColorWheel extends Component {\r\n\r\n    updateSelectedColor = (color) => { \r\n        if (color === this.props.state.baseColor) { return; }\r\n        this.props.updateBaseColor(color);\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.colorWheel.selfInvoked === false) {\r\n            this.colorWheel.externalInput(this.props.state.baseColor);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div id=\"canvasContainer\">\r\n                <canvas id=\"colorCanvas\"></canvas>\r\n                <canvas id=\"colorCanvasUI\" tabIndex=\"1\" style={{outline:\"none\"}}></canvas>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n    componentDidMount() {\r\n        let colorCanvas = document.querySelector(\"#colorCanvas\");\r\n        let colorCanvasUI = document.querySelector(\"#colorCanvasUI\");\r\n        this.colorWheel = new cWheel(this.props.state.width,this.props.state.baseColor,colorCanvas,colorCanvasUI,this.updateSelectedColor);\r\n        colorCanvasUI.addEventListener(\"mousedown\",this.colorWheel.mouseDown);\r\n        colorCanvasUI.addEventListener(\"mousemove\",this.colorWheel.mouseMove);\r\n        colorCanvasUI.addEventListener(\"mouseup\",this.colorWheel.mouseUp);\r\n        colorCanvasUI.addEventListener(\"touchstart\",this.colorWheel.mouseDown,{ passive: false });\r\n        colorCanvasUI.addEventListener(\"touchmove\",this.colorWheel.mouseMove,{ passive: false });\r\n        colorCanvasUI.addEventListener(\"touchend\",this.colorWheel.mouseUp);\r\n\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport '../components/colorSliders.css';\r\n\r\nexport default class HslSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"h\":359.99,\r\n            \"s\":100,\r\n            \"l\":100\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.props.state.baseColor.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"[dec]\").replace(/\\./g,\"\").replace(\"[dec]\",\".\").replace(/[^\\d.]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"hsl\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(newColor);\r\n        }\r\n    }\r\n\r\n    setSliders = () => {\r\n        [\"h\",\"s\",\"l\"].forEach((e,i)=>{\r\n            const value = (e===this.buffer[0]) ? this.buffer[1] : this.props.state.baseColor[i];\r\n            document.querySelector(`#${e}r`).value = Number(value);\r\n            document.querySelector(`#${e}t`).value = value;\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"colorInputBox\">\r\n                    <p>hue, saturation, luminosity</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t`}>{e} \r\n                        <input name={`${e}t`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onChange={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","export function setCookie(cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\"+d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport function getCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for(var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import React, { Component } from 'react'\r\nimport {hueReset} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\n\r\n\r\nexport default class Harmonic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.settings = {\r\n            \"Palette Mode\": {\r\n                type: \"list\",\r\n                \"Analogous\": [0,30,330],\r\n                \"Complementary\": [0,180],\r\n                \"Complementary split\": [0,150,210],\r\n                \"Complementary with split\": [0,150,180,210],\r\n                \"Tetradic rectangle\": [0,30,60,210,240],\r\n                \"Tetradic square\": [0,90,180,270],\r\n                \"Triadic\": [0,120,240],\r\n                // \"Custom\": []\r\n            },\r\n            \"Saturation Steps\": {\r\n                type: \"range\",\r\n                min: 1,\r\n                max: 7\r\n            },\r\n            \"Luminosity Steps\": {\r\n                type: \"range\",\r\n                min: 1,\r\n                max: 7\r\n            }\r\n        }\r\n        this.state = {\r\n            \"Palette Mode\": \"Analogous\",\r\n            \"Saturation Steps\": 4,\r\n            \"Luminosity Steps\": 4,\r\n        }\r\n    }\r\n    updateState = (e) => {\r\n        e.persist();\r\n        let newState = this.state;\r\n        let value = e.target.value;\r\n        if (value.match(/\\d+/g)) { value = Number(value) }\r\n        newState[e.target.name] = value;\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"Harmonic\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n        let cookie = cookies.getCookie(\"Harmonic\");\r\n        (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>harmonic color palettes</h3>\r\n                <div className=\"paletteSettings\">\r\n                    {Object.keys(this.state).map(e=>\r\n                        <div key={`set${e}`} className=\"paletteSetting\">\r\n                        <span className=\"paletteSettingLabel\">\r\n                            <span className=\"paletteSettingLabelName\">{e}</span>\r\n                            <span className=\"paletteSettingLabelValue\">\r\n                                {(Number(this.state[e])) ? `(${this.state[e]})` : \"\" }\r\n                            </span>\r\n                        </span>\r\n                        <span className=\"paletteSettingInputBlock\">\r\n                            {(this.settings[e].type === \"list\") ? \r\n                                Object.keys(this.settings[e]).map((f,i)=>{\r\n                                    if (i===0) { return null }\r\n                                    else { \r\n                                        return (\r\n                                            <span key={f} className=\"paletteInputRadioBlock\">\r\n                                                <input \r\n                                                    id={f} \r\n                                                    name={e} \r\n                                                    value={f} \r\n                                                    type=\"radio\" \r\n                                                    onChange={this.updateState}\r\n                                                    checked={(f===this.state[e]) ? true : false}\r\n                                                />\r\n                                                <label key={f} htmlFor={f} className=\"paletteInputRadio\">{f}</label>\r\n                                            </span>\r\n                                        );\r\n                                    }\r\n                                })\r\n                                : \r\n                                <React.Fragment>\r\n                                    <span className=\"paletteInputRangeBlock\">\r\n\r\n                                    <input \r\n                                        type=\"range\" \r\n                                        name={e} \r\n                                        min={this.settings[e][\"min\"]} \r\n                                        max={this.settings[e][\"max\"]} \r\n                                        value={this.state[e]} \r\n                                        onChange={this.updateState}\r\n                                    />\r\n                                    </span>\r\n                                </React.Fragment>\r\n                            }\r\n                        </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"paletteContainer\">\r\n                    {Object.values(this.settings[\"Palette Mode\"][this.state[\"Palette Mode\"]]).map((h,i)=>{\r\n                        let hue = hueReset(Number(this.props.globalState.baseColor[0])+h).toFixed(2);\r\n                        return (\r\n                        <div key={`h${i}`} className=\"paletteBlock\">\r\n                        \r\n                        {Array(this.state[\"Saturation Steps\"]).fill(\"0\").map((s,j)=>{\r\n                            let saturation = Number(100*(j+1)/this.state[\"Saturation Steps\"]).toFixed(2);\r\n                            return (\r\n                            <div key={`h${i}s${j}`} className=\"paletteRow\">\r\n                                \r\n                                {Array(this.state[\"Luminosity Steps\"]).fill(\"0\").map((l,k)=> {\r\n                                    let luminosity = Number(100*(k+1)/(1+this.state[\"Luminosity Steps\"])).toFixed(2);\r\n                                    let clipBoardString = this.props.copiedFormats[this.props.paletteState[\"Copied format\"]]([hue,saturation,luminosity]);\r\n                                    return(<div \r\n                                        key={`h${i}s${j}l${k}`}\r\n                                        className=\"paletteBox\"\r\n                                        style={{backgroundColor:`hsl(${hue},${saturation}%,${luminosity}%)`}}\r\n                                        title={`click to copy:\\n${clipBoardString}`}\r\n                                        onClick={(e)=>{this.props.paletteBoxClick(e,clipBoardString,[hue,saturation,luminosity])}}\r\n                                    >\r\n                                    </div>);\r\n                                })}\r\n\r\n                            </div>\r\n                            );    \r\n                        })}\r\n                        \r\n                        </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {hueReset} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\n\r\n\r\nexport default class Shading extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            // \"setting\":[min,max,current/default]\r\n            \"shadow temperature\":[-50,50,-20],\r\n            \"highlight temperature\":[-50,50,20],\r\n            \"luminosity contrast\": [0,10,7],\r\n            \"saturation contrast\": [0,10,7],\r\n            \"palette size\": [4,100,100],\r\n        }\r\n    }\r\n    calculateColor = (i) => {\r\n        let baseColor = this.props.globalState.baseColor;\r\n        let baseHue = Number(baseColor[0]);\r\n        let baseSaturation = Number(baseColor[1]);\r\n        let baseLuminosity = Number(baseColor[2]);\r\n        let lContrast = this.state[\"luminosity contrast\"][2];\r\n        let sContrast = this.state[\"saturation contrast\"][2];\r\n        let paletteSize = this.state[\"palette size\"][2];\r\n        let maxSaturation = this.state[\"saturation contrast\"][1];\r\n        let maxLuminosity = this.state[\"luminosity contrast\"][1]\r\n\r\n        let h0 = baseHue + this.state[\"shadow temperature\"][2] * ((baseHue >=0 && baseHue < 180) ? -1 : 1);\r\n        let h1  = baseHue + this.state[\"highlight temperature\"][2] * ((baseHue >=0 && baseHue < 180) ? -1 : 1);\r\n        let h = h0 + ((h1-h0)*i/this.state[\"palette size\"][2])\r\n\r\n        let s0 = baseSaturation - baseSaturation * (sContrast/maxSaturation);\r\n        let s1 = baseSaturation + (100-baseSaturation) * (sContrast/maxSaturation);\r\n        let s = s0 + ((s1-s0)*i/paletteSize);\r\n\r\n        let l0 = baseLuminosity - baseLuminosity * (lContrast/maxLuminosity);\r\n        let l1 = baseLuminosity + (100-baseLuminosity) * (lContrast/maxLuminosity);\r\n        let l = l0 + ((l1-l0)*i/paletteSize);\r\n\r\n        return [hueReset(h).toFixed(2),s.toFixed(2),l.toFixed(2)];\r\n    }\r\n    updateSettings = (e) => {\r\n        e.persist();\r\n        let newState = this.state;\r\n        newState[e.target.name][2] = Number(e.target.value);\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"Shading\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n        let cookie = cookies.getCookie(\"Shading\");\r\n        (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n    render() {\r\n        let paletteSize = this.state[\"palette size\"][2];\r\n        let palette = new Array(paletteSize);\r\n        palette = palette.fill(\"0\").map((e,i,a)=>this.calculateColor(i));\r\n        // let shadingGradient = \r\n        //     `linear-gradient(to right, \r\n        //         ${palette.map(e=>`hsl(${e[0]},${e[1]}%,${e[2]}%)`)}\r\n        // )`;\r\n        let sphereCSS = {\r\n            width:\"200px\",\r\n            height:\"200px\",\r\n            clipPath:\"circle()\",\r\n            background:`radial-gradient(\r\n                60% 60% at 40% 40%,\r\n                ${palette.map(e=>`hsl(${e[0]},${e[1]}%,${e[2]}%)`).reverse()}\r\n            )`\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h3>shading color palette</h3>\r\n                <div className=\"paletteSettings\">\r\n                    {Object.keys(this.state).map(e=>{\r\n                        return(\r\n                            <div className=\"paletteSetting\" key={e}>\r\n                                <span className=\"paletteSettingLabel\">\r\n                                    <span className=\"paletteSettingLabelName\">{e}</span>\r\n                                    <span className=\"paletteSettingLabelValue\">({this.state[e][2]})</span>\r\n                                </span>\r\n                                <span className=\"paletteInputRangeBlock\">\r\n                                <input \r\n                                    type=\"range\" \r\n                                    min={this.state[e][0]} \r\n                                    max={this.state[e][1]} \r\n                                    value={this.state[e][2]} \r\n                                    title={this.state[e][2]}\r\n                                    onChange={this.updateSettings} \r\n                                    name={e}>\r\n                                </input>\r\n                                </span>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"paletteContainer\">\r\n                    <div className=\"paletteBlock\">\r\n                        <div className=\"paletteRow\" style={{display:'flex',flexWrap:'wrap',width:'21em'}}>\r\n                            {palette.map((e,i)=>{\r\n                                let color = e;\r\n                                let clipBoardString = this.props.copiedFormats[this.props.paletteState[\"Copied format\"]]([color[0],color[1],color[2]]);\r\n                                let cssColor = `hsl(${color[0]},${color[1]}%,${color[2]}%)`;\r\n                                return(\r\n                                    <div \r\n                                        className=\"paletteBox\"\r\n                                        key={i}\r\n                                        style={{backgroundColor:cssColor}}\r\n                                        title={`click to copy:\\n${clipBoardString}`}\r\n                                        onClick={(e)=>{this.props.paletteBoxClick(e,clipBoardString,[color[0],color[1],color[2]])}}\r\n                                    >\r\n                                    </div>\r\n                                );\r\n                            }) }\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* previews below - suggestion: choose ONE to keep cpu usage lower */}\r\n                    {/* linear gradient preview using css */}\r\n                    {/* <div className=\"paletteBlock\">\r\n                        <div style={{\r\n                            background:shadingGradient,\r\n                            width: \"200px\",\r\n                            height: \"200px\"\r\n                        }}>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* radial gradient preview using css */}\r\n                    <div className=\"paletteBlock\">\r\n                        <div style={sphereCSS}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Harmonic from './Harmonic';\r\nimport Shading from './Shading';\r\n// import Contrast from './Contrast';\r\nimport copyToClipboard from '../accessories/copyToClipboard';\r\nimport {hsl2hex, hsl2rgb} from '../accessories/colorConversion';\r\nimport * as cookies from '../accessories/cookies';\r\nimport './ColorPalette.css';\r\n\r\nexport default class ColorPalette extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            mode: \"Harmonic\",\r\n            \"Copied format\": \"hex\"\r\n        }\r\n        this.modes = {\r\n            \"Harmonic\" : Harmonic,\r\n            \"Shading\" : Shading,\r\n            // \"Contrast\" : Contrast\r\n        }\r\n        this.copiedFormats = {\r\n            \"hex\":(color)=>{return hsl2hex(...color)},\r\n            \"hsl\":(color)=>{return `${color[0]},${color[1]}%,${color[2]}%`},\r\n            \"rgb\":(color)=>{return hsl2rgb(...color)},\r\n        }\r\n    }\r\n    changeMode = (e) => {\r\n        let newState = this.state;\r\n        newState.mode = e.target.id.replace(\"paletteMode\",\"\");\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n\r\n    updateCookie = () => {\r\n        cookies.setCookie(\"ColorPalette\",JSON.stringify(this.state),1);\r\n    }\r\n\r\n    applyCookie = () => {\r\n    let cookie = cookies.getCookie(\"ColorPalette\");\r\n    (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\r\n    }\r\n\r\n    changeCopiedFormat = (e) => {\r\n        let newState = this.state;\r\n        newState[\"Copied format\"] = e.target.id.replace(\"copiedFormat\",\"\");\r\n        this.setState(newState);\r\n        this.updateCookie();\r\n    }\r\n\r\n    paletteBoxClick = (e,copyString,hslArray) => {\r\n        e.persist();\r\n        if (e.ctrlKey) {\r\n            this.props.updateBaseColor(hslArray);\r\n         }\r\n         else {\r\n            copyToClipboard(copyString);\r\n            e.target.innerText = \"✔️\";\r\n            setTimeout(()=>{e.target.innerText = \"\"},500);\r\n         }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"colorPaletteModeButtons\">\r\n                {/* <span id=\"paletteToggle\" onClick={this.props.togglePicker}>\r\n                ☰\r\n                </span> */}\r\n                {Object.keys(this.modes).map((e,i)=>{\r\n                    let mode = e;\r\n                    let checked = (e===this.state.mode) ? true : false;\r\n                    let id = `paletteMode${e}`;\r\n                    return (\r\n                        <span key={mode} className=\"colorPaletteModeButton\">\r\n                            <input type=\"radio\" name=\"paletteMode\" id={id} checked={checked} onChange={this.changeMode}></input>\r\n                            <label htmlFor={id}>{mode}</label>\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"colorPaletteModeButtons\" style={{borderBottom:\"none\"}}>\r\n                <span>clipboard format: </span>\r\n                {Object.keys(this.copiedFormats).map(e=>{\r\n                    let mode = e;\r\n                    let checked = (e===this.state[\"Copied format\"]) ? true : false;\r\n                    let id = `copiedFormat${e}`;\r\n                    return(\r\n                        <span key={e} className=\"colorPaletteModeButton\">\r\n                            <input type=\"radio\" name=\"CopiedFormat\" id={id} checked={checked} onChange={this.changeCopiedFormat}></input>\r\n                            <label htmlFor={id}>{mode}</label>\r\n                        </span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {React.createElement(\r\n                this.modes[this.state.mode],\r\n                {   //props\r\n                    paletteState:this.state,\r\n                    globalState:this.props.state,\r\n                    updateBaseColor:this.props.updateBaseColor,\r\n                    updateComponentState:this.updateComponentState,\r\n                    copiedFormats:this.copiedFormats,\r\n                    paletteBoxClick:this.paletteBoxClick,\r\n                }\r\n            )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    componentDidMount () {\r\n        this.applyCookie();\r\n    }\r\n}\r\n","//obtained from https://gist.github.com/Chalarangelo/4ff1e8c0ec03d9294628efbae49216db#file-copytoclipboard-js\r\nexport default function copyToClipboard (str) {\r\n    const el = document.createElement('textarea');  // Create a <textarea> element\r\n    el.value = str;                                 // Set its value to the string that you want copied\r\n    el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n    el.style.position = 'absolute';                 \r\n    el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n    document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n    const selected =            \r\n        document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n        ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n        : false;                                    // Mark as false to know no selection existed before\r\n    el.select();                                    // Select the <textarea> content\r\n    document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n    document.body.removeChild(el);                  // Remove the <textarea> element\r\n    if (selected) {                                 // If a selection existed before copying\r\n        document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n        document.getSelection().addRange(selected);   // Restore the original selection\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport {rgb2hsl,hsl2rgb} from '../accessories/colorConversion';\r\n\r\nexport default class RgbSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputs = {\r\n            \"r\":255,\r\n            \"g\":255,\r\n            \"b\":255,\r\n        };\r\n        this.buffer = [];\r\n    }\r\n    cFocus = (e) => {\r\n        e.target.select();\r\n        const colorVar = e.target.id.substr(0,1);\r\n        this.buffer = [colorVar,e.target.value];\r\n    }\r\n    cChange = (e) => {\r\n        e.persist();\r\n        const colorVar = e.target.id.substr(0,1); \r\n        const key = e.nativeEvent.data;\r\n        let value = e.target.value;\r\n        const newColor = this.baseColorRGB.slice();    \r\n        if ((key === null || value === null) && e.nativeEvent.inputType.substr(0,6)!==\"delete\") {return;}\r\n        if (e.target.type === \"text\") {\r\n            value = value.replace(/\\./,\"\").replace(/[\\D]/g,\"\");\r\n            if (value >= this.inputs[colorVar]) value = this.inputs[colorVar];\r\n            this.buffer=[colorVar,value];\r\n            e.target.value = this.buffer[1];\r\n        }\r\n        if (value) {\r\n            newColor[\"rgb\".indexOf(colorVar)] = Number(value);\r\n            this.props.updateBaseColor(rgb2hsl(...newColor));\r\n        }\r\n\r\n    }\r\n\r\n    setSliders = () => {\r\n        this.baseColorRGB = hsl2rgb(...this.props.state.baseColor);\r\n        [\"r\",\"g\",\"b\"].forEach((e,i)=>{\r\n            document.querySelector(\"#\"+e+\"r\").value = this.baseColorRGB[i];\r\n            document.querySelector(\"#\"+e+\"t\").value = this.baseColorRGB[i];\r\n            }\r\n        );\r\n    }\r\n    componentDidUpdate = () => {\r\n        this.setSliders();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"colorInputBox\">\r\n            <p>red, green, blue</p>\r\n                {Object.keys(this.inputs).map(e=>\r\n                        <div className=\"colorInputRow\" key={e[0]}>\r\n                        <label htmlFor={`${e}t}`}>{e} \r\n                        <input name={`${e}r`} id={`${e}r`}  type=\"range\" min=\"0\" max={this.inputs[e]} onChange={this.cChange}/>\r\n                        <input type=\"text\" id={`${e}t`} min=\"0\" max={this.inputs[e]} size=\"4\" onInput={this.cChange} onFocus={this.cFocus} onBlur={()=>this.buffer=[]}/>\r\n                        </label>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setSliders();\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport ColorPreview from './components/ColorPreview';\nimport ColorWheel from './components/ColorWheel';\nimport HslSliders from './components/HslSliders';\nimport ColorPalette from './components/ColorPalette';\nimport * as cookies from './accessories/cookies';\nimport './ColorTools.css';\nimport RgbSliders from './components/RgbSliders';\nexport default class ColorTools extends Component {\n  constructor(props) {\n    super (props);\n    this.state = { \n      baseColor:[0,100,50],\n      width:300,\n      picker:true,\n    };\n  }\n\n  updateBaseColor = (color) => { \n    if (color === this.state.baseColor) { return; }\n    if (color[0] >= 360) { color[0] = 0 }\n    if (color[1] >= 100) { color[1] = 100 }\n    if (color[2] >= 100) { color[2] = 100 }\n    color = color.map(e=>Number(e));\n    this.textColor = (color[2]>40) ? \"black\" : \"white\";\n    this.setState({baseColor:color});\n    //improve performance by only updating cookie if the mouse isn't down (specifically when picking a color in ColorWheel)\n    //explore using localdata instaed of cookies\n    this.updateCookie();\n  }\n\n  updateCookie = () => {\n    cookies.setCookie(\"colorTools\",JSON.stringify(this.state),1);\n  }\n\n  applyCookie = () => {\n    let cookie = cookies.getCookie(\"colorTools\");\n    (cookie) ? this.setState(JSON.parse(cookie)) : this.updateCookie();\n  }\n\n  togglePicker = () => {\n    let newState = this.state;\n    newState.picker = (newState.picker) ? false : true;\n    this.setState(newState);\n  }\n  pickerCSS = () => {\n    return (this.state.picker) ? { display: \"block\" } : { display: \"none\" };\n  }\n\n  render() {\n  return (\n    <div id=\"colorToolsFlexContainer\">\n      <div id=\"colorPickers\" style={this.pickerCSS()}>\n        <ColorPreview updateBaseColor={this.updateBaseColor} state={this.state} />\n        <ColorWheel updateBaseColor={this.updateBaseColor} state={this.state} />\n        <HslSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n        <RgbSliders updateBaseColor={this.updateBaseColor} state={this.state} />\n      </div>\n      <div id=\"colorPalette\">\n        <ColorPalette updateBaseColor={this.updateBaseColor} togglePicker={this.togglePicker} state={this.state}/>\n      </div>\n    </div>\n  );\n  };\n  componentDidMount () {\n    this.applyCookie();\n  }\n}\n"],"sourceRoot":""}